version: "3"

vars:
  venv: ".venv"
  lib: "undead_slayer" # Name of the package
  run: "uv run"

tasks:
  lint:
    desc: "Run linter (Ruff)"
    summary: "Check the code quality using Ruff"
    cmds:
      - "{{.run}} ruff check"
    sources:
      - "**/*.py"

  lint-fix:
    desc: "Run linter with auto-fix (Ruff)"
    summary: "Check the code quality using Ruff, with safe auto-fix"
    cmds:
      - "{{.run}} ruff check --fix"
    sources:
      - "**/*.py"

  typecheck:
    desc: "Run type checker (pyright)"
    cmds:
      - "{{.run}} pyright"
    sources:
      - "**/*.py"

  typecheck-stats:
    desc: "Run type checker with stats (pyright)"
    cmds:
      - "{{.run}} pyright --stats"
    sources:
      - "**/*.py"

  format:
    desc: "Auto-format code (Ruff)"
    cmds:
      - "{{.run}} ruff format"
    sources:
      - "**/*.py"

  format-check:
    desc: "Check code formatting (Ruff)"
    summary: "Check the code formatting using Ruff"
    cmds:
      - "{{.run}} ruff format --check"
    sources:
      - "**/*.py"

  run:
    desc: "Run the application"
    cmds:
      - "{{.run}} {{.lib}} play"
    vars:
      args: ""

  run-cli:
    desc: "Run the application with CLI"
    cmds:
      - "{{.run}} {{.lib}} play {{.args}}"
    vars:
      args: "cli"

  run-tui:
    desc: "Run the application with TUI"
    cmds:
      - "{{.run}} {{.lib}} play {{.args}}"
    vars:
      args: "tui"

  run-gui:
    desc: "Run the application with GUI"
    cmds:
      - "{{.run}} {{.lib}} play {{.args}}"
    vars:
      args: "gui"

  test:
    desc: "Run tests (pytest)"
    cmds:
      - "{{.run}} pytest"

  install:
    desc: "Install dependencies"
    summary: "Install all dependencies including dev and extra dependencies"
    cmds:
      - uv sync --all-extras --dev

  reinstall:
    desc: "Reinstall dependencies"
    cmds:
      - rm -rf {{.venv}}
      - uv sync --all-extras --dev

  update:
    desc: "Update dependencies"
    cmds:
      - uv sync --all-extras --dev --upgrade

  pre-commit-all:
    desc: "Run pre-commit hooks on all files"
    cmds:
      - "{{.run}} pre-commit run --all-files"

  pre-commit-update:
    desc: "Update pre-commit hooks"
    cmds:
      - "{{.run}} pre-commit autoupdate"

  clean:
    desc: "Clean up artifacts"
    cmds:
      - rm -rf __pycache__ .pyright_cache .pytest_cache .venv
      - find . -type d -name "__pycache__" -exec rm -rf {} +

  check-all:
    desc: "Run all checks and tests"
    summary: "Run lint, typecheck, format-check and test"
    deps: [lint, typecheck, format-check, test]

  check-all-fix:
    desc: "Run all checks and tests with auto-fix"
    summary: "Run lint-fix, typecheck, format and test"
    deps: [lint-fix, typecheck, format, test]
